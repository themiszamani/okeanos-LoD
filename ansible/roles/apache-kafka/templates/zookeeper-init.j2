#!/bin/bash

# Define the user that should run this script.
SCRIPT_USER=kafka

# The path where Apache Zookeeper is installed.
INSTALLATION_PATH="{{ installation_path }}"

# The full path of the pid file to use.
PIDFILE="$INSTALLATION_PATH/kafka/zookeeper.pid"

# The full path of the lock file to use.
LOCKFILE="$INSTALLATION_PATH/kafka/zookeeper-lock"

# The command that will start Apache Zookeeper.
START_COMMAND="$INSTALLATION_PATH/kafka/bin/zookeeper-server-start.sh $INSTALLATION_PATH/kafka/config/zookeeper.properties"

start(){
  # Assert that there is no other Apache Zookeeper instance, created with this script, running.
  [ -f $LOCKFILE ] && return 0

  # Execute the command to start Apache Zookeeper and wait until the service has been started.
  sudo -u $SCRIPT_USER /sbin/start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE --exec $START_COMMAND --retry 5

  # Get the returned value of the executed command and create a lock file to prevent multiple instantiations.
  RETVAL=$?
  [ $RETVAL -eq 0 ] && $(sudo -u $SCRIPT_USER touch $LOCKFILE)
  return $RETVAL
}

stop(){
  # Assert that an Apache Zookeeper instance, created with this script, is running.
  [ ! -f $LOCKFILE ] && return

  # Execute the command to stop Apache Zookeeper and wait until the service has been stopped.
  sudo -u $SCRIPT_USER /sbin/start-stop-daemon --stop --remove-pidfile --pidfile $PIDFILE --retry 5

  # Get the returned value of the executed command and delete the lock file.
  RETVAL=$?
  [ $RETVAL -eq 0 ] && $(sudo -u $SCRIPT_USER rm -f $LOCKFILE)
  return $RETVAL
}

restart(){
  stop
  start
}

RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f $LOCKFILE ] && restart || :
    ;;
  status)
    # If the lock file exists, then Apache Zookeeper is running.
    [ -f $LOCKFILE ] && echo "Apache Zookeeper is running." || echo "Apache Zookeeper is not running."
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL

